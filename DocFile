FROM ubuntu:20.04
#contact maintainer for any issues 
MAINTAINER "Abdul Raheem" <abdul@x.com>


LABEL name="Docker build for TFNR-Automation using the robot framework"

# Ensures python output is set straight to the terminal without buffering it first
ENV PYTHONUNBUFFERED 1

# Setting the workdir as environment
ENV workdir /app

# Setting Sauce Connect version as variable
ARG SC_VERSION=4.5.4

# Adding Jython related variables and environment variables
ARG JYTHON_VERSION=2.7.2
ARG JYTHON_HOME=/opt/jython-$JYTHON_VERSION

ENV JYTHON_VERSION=$JYTHON_VERSION
ENV JYTHON_HOME=$JYTHON_HOME
ENV PATH=$PATH:$JYTHON_HOME/bin

# Create root directory for our project in the container
RUN mkdir -p /app/sauce-connect

# Set the working directory to /app
WORKDIR ${workdir}
# Install wget and Cron
RUN  apt-get update \
  && apt-get install -y wget \
  && apt-get install -y cron \
  && apt-get install -y default-jre

# Installing Jython
RUN wget -cO jython-installer.jar "http://search.maven.org/remotecontent?filepath=org/python/jython-installer/$JYTHON_VERSION/jython-installer-$JYTHON_VERSION.jar" && \
    java -jar jython-installer.jar -s -d "$JYTHON_HOME" -t standard -e demo doc -i src && \
    rm -fr "$JYTHON_HOME"/Docs "$JYTHON_HOME"/Demo "$JYTHON_HOME"/tests && \
    rm -f jython-installer.jar && \
    ln -sfv "$JYTHON_HOME/bin/"* /usr/local/bin/

# Copy the current directory contents into the container at /app
#ADD . /app/

# Downloading Sauce connect
#RUN wget https://saucelabs.com/downloads/sc-$SC_VERSION-linux.tar.gz -O - | tar -xz -C /app/sauce-connect/
#RUN chmod -R a+x /app/sauce-connect/sc-$SC_VERSION-linux && chown -R root:root /app/sauce-connect/sc-$SC_VERSION-linux

# Setting the variable SC to sauce-connect working directory
RUN export SC=$workdir

RUN apt-get install python3.7 --assume-yes
RUN apt-get install --quiet --assume-yes python3-pip vim unzip net-tools gir1.2-gdkpixbuf-2.0 gir1.2-gdkpixbuf-2.0 libaio1 python3-gi gobject-introspection gir1.2-gtk-3.0 \
    && python3 -m pip install --upgrade pip setuptools wheel

RUN apt install --assume-yes libcairo2-dev pkg-config python3-dev
ADD python3requirements.txt jythonrequirements.txt ./
# Install pipenv, generate requirements.txt from Pipfile and install pip packages
RUN python3 -m pip install pipenv \
     && python3 -m pip install -r python3requirements.txt

RUN jython -m ensurepip \ 
    && jython -m pip install -r jythonrequirements.txt

RUN wget --no-verbose https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
RUN dpkg --install google-chrome-stable_current_amd64.deb; apt-get --fix-broken --assume-yes install
RUN CHROMEDRIVER_VERSION=`wget --no-verbose --output-document - https://chromedriver.storage.googleapis.com/LATEST_RELEASE` && \
    wget --no-verbose --output-document /tmp/chromedriver_linux64.zip http://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip && \
    unzip -qq /tmp/chromedriver_linux64.zip -d /opt/chromedriver && \
    chmod +x /opt/chromedriver/chromedriver && \
    ln -fs /opt/chromedriver/chromedriver /usr/local/bin/chromedriver

# Downloading Sauce connect
RUN mkdir /opt/sauce-connect && wget https://saucelabs.com/downloads/sc-$SC_VERSION-linux.tar.gz -O - | tar -xz -C /opt/sauce-connect/
RUN chmod -R a+x /opt/sauce-connect/sc-$SC_VERSION-linux && chown -R root:root /opt/sauce-connect/sc-$SC_VERSION-linux

# Downloading Oracle client
RUN mkdir /opt/oracle &&  wget -O /tmp/insta.zip https://download.oracle.com/otn_software/linux/instantclient/199000/instantclient-basic-linux.x64-19.9.0.0.0dbru.zip \
    && unzip '/tmp/insta.zip' -d /opt/oracle && rm /tmp/insta.zip || true;
RUN   echo "export LD_LIBRARY_PATH=/opt/oracle/instantclient_19_9:$LD_LIBRARY_PATH" >> ~/.bashrc && /bin/bash -c "source ~/.bashrc"
# Copy the current directory contents into the container at /app
#ADD . /app/
#RUN GECKODRIVER_VERSION=`wget --no-verbose --output-document - https://api.github.com/repos/mozilla/geckodriver/releases/latest | grep tag_name | cut -d '"' -f 4` && \
#    wget --no-verbose --output-document /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/$GECKODRIVER_VERSION/geckodriver-$GECKODRIVER_VERSION-linux64.tar.gz && \
 #   tar --directory /opt -zxf /tmp/geckodriver.tar.gz && \
  #  chmod +x /opt/geckodriver && \
  #  ln -fs /opt/geckodriver /usr/local/bin/geckodriver
COPY ./sauce-connect/createSCTunnels.sh /app/sauce-connect/createSCTunnels.sh
RUN chmod -R a+x /app/sauce-connect/createSCTunnels.sh
ENTRYPOINT ["/bin/bash"]
